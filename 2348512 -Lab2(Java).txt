**Question - 1**


import java.util.Scanner;


public class TopKNumbers {


    private static int[] numbers;


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        do {
            // Input the size of the array
            System.out.print("Enter the size of the array: ");
            int n = scanner.nextInt();


            // Input the array elements
            System.out.print("Enter the array elements separated by spaces: ");
            numbers = new int[n];
            for (int i = 0; i < n; i++) {
                numbers[i] = scanner.nextInt();
            }


            // Input the value of K
            System.out.print("Enter the value of K: ");
            int k = scanner.nextInt();


            findTopKNumbers(k);


            // Ask the user if they wish to continue
            System.out.print("Do you wish to continue (yes or no)? ");
            String continueInput = scanner.next().toLowerCase();


            if (continueInput.equals("no")) {
                System.out.println("Thank you!");
                break;
            }


        } while (true);


        scanner.close();
    }


    public static void findTopKNumbers(int k) {
        int[] frequency = new int[1001]; // Assuming the array elements are between 1 and 1000


        // Count the frequency of each number in the array
        for (int num : numbers) {
            frequency[num]++;
        }


        // Output the top K numbers with the highest occurrences
        System.out.print("Output: ");
        for (int i = 0; i < k; i++) {
            int maxFrequency = -1;
            int maxIndex = -1;


            // Find the number with the maximum frequency
            for (int j = 1; j < frequency.length; j++) {
                if (frequency[j] > maxFrequency) {
                    maxFrequency = frequency[j];
                    maxIndex = j;
                }
            }


            // Print the number with the maximum frequency
            System.out.print(maxIndex + " ");


            // Set the frequency of the printed number to -1 to avoid printing it again
            frequency[maxIndex] = -1;
        }
        System.out.println();
    }
}


Output:


java -cp /tmp/zY26IHForp TopKNumbers
Enter the size of the array: 7
Enter the array elements separated by spaces: 1 5 8 3 4 7 9 
Enter the value of K: 5
Output: 1 3 4 5 7 
Do you wish to continue (yes or no)? yes
Enter the size of the array: 3
Enter the array elements separated by spaces: 7 9 2
Enter the value of K: 6
Output: 2 7 9 1 3 4 
Do you wish to continue (yes or no)? 
*Question -2*


import java.util.Scanner;


public class ShareTrader {


    private static int maxProfit;


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        do {
            // Input the number of stock prices
            System.out.print("Enter the number of stock prices: ");
            int n = scanner.nextInt();


            // Input the stock prices
            int[] prices = new int[n];
            System.out.print("Enter the stock prices separated by spaces: ");
            for (int i = 0; i < n; i++) {
                prices[i] = scanner.nextInt();
            }


            findMaxProfit(prices);


            // Ask the user if they wish to continue
            System.out.print("Do you wish to continue (yes or no)? ");
            String continueInput = scanner.next().toLowerCase();


            if (continueInput.equals("no")) {
                System.out.println("Thank you!");
                break;
            }


        } while (true);


        scanner.close();
    }


    public static void findMaxProfit(int[] prices) {
        maxProfit = 0;


        for (int i = 0; i < prices.length; i++) {
            int profitFirstTransaction = findProfit(prices, 0, i);
            int profitSecondTransaction = findProfit(prices, i + 1, prices.length - 1);


            int totalProfit = profitFirstTransaction + profitSecondTransaction;
            maxProfit = Math.max(maxProfit, totalProfit);
        }


        System.out.println("Output: " + maxProfit);
    }


    private static int findProfit(int[] prices, int start, int end) {
        if (start >= end) {
            return 0;
        }


        int profit = 0;
        for (int i = start; i < end; i++) {
            for (int j = i + 1; j <= end; j++) {
                if (prices[j] > prices[i]) {
                    int currentProfit = prices[j] - prices[i] + findProfit(prices, start, i - 1)
                            + findProfit(prices, j + 1, end);
                    profit = Math.max(profit, currentProfit);
                }
            }
        }


        return profit;
    }
}






Output:


java -cp /tmp/zY26IHForp ShareTrader
Enter the number of stock prices: 2
Enter the stock prices separated by spaces: 150 80
Output: 0
Do you wish to continue (yes or no)?